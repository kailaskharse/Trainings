GPIO Framework in u-boot source code:
-----------------------------------
Step1: Study GPIO basics & Study AM3358 GPIO Controller block diagram, specifications & register programming model.

Step2: Identify GPIO Driver Source code in u-boot:
-------------------------------------------------
search gpio keywords in uboot configuration files.

CONFIG_OMAP_GPIO
drivers/gpio/omap_gpio.c

define CONFIG_CMD_GPIO
common/cmd_gpio.c

Step3: Prepare GPIO Source code flow: (Use Debugging Techniques)
------------------------------------
Basic Debugging Mechanisum is prints. 
Enable printf() statement inside each and every function.

Run application and collect the logs.
=> gpio set 53

cmd/gpio.c:do_gpio:129

drivers/gpio/omap_gpio.c:omap_gpio_probe:306
drivers/gpio/omap_gpio.c:omap_gpio_direction_output:252
drivers/gpio/omap_gpio.c:_set_gpio_dataout:98
drivers/gpio/omap_gpio.c:_set_gpio_direction:61
gpio: pin 53 (gpio 53) value is 1
drivers/gpio/omap_gpio.c:omap_gpio_get_value:264
drivers/gpio/omap_gpio.c:_get_gpio_value:113
drivers/gpio/omap_gpio.c:_get_gpio_direction:81

gpio input 30
cmd/gpio.c:do_gpio:129
drivers/gpio/omap_gpio.c:omap_gpio_direction_input:240
drivers/gpio/omap_gpio.c:_set_gpio_direction:61
drivers/gpio/omap_gpio.c:omap_gpio_get_value:264
drivers/gpio/omap_gpio.c:_get_gpio_value:113
drivers/gpio/omap_gpio.c:_get_gpio_direction:81
gpio: pin 30 (gpio 30) value is 1




KM # gpio clear 110

cmd_gpio.c:do_gpio:32

do_gpio()
{
        str_cmd = argv[1]="clear" ;
	sub_cmd =  2; 
      str_gpio = argv[2]="110";
	gpio=110;
gpio_request(gpio, "cmd_gpio");

value = 0;
gpio_direction_output(110, 0);


}

---------------------------------------------------------

omap_gpio.c:gpio_request:241

omap_gpio.c:check_gpio:68
omap_gpio.c:gpio_valid:58
omap_gpio.c:gpio_direction_output:223

set_gpio_dataout(0x4805 9000, 14, 0)
{


}

omap_gpio.c:check_gpio:68
omap_gpio.c:gpio_valid:58
omap_gpio.c:_set_gpio_dataout:131
omap_gpio.c:_set_gpio_direction:82
gpio: pin 110 (gpio 110) value is 0





GPIO u-boot source code flow:
----------------------------

boot/cmd_gpio.c

do_gpio()


drivers/gpio/omap_gpio.c

gpio_request() 
	check_gpio()
	gpio_valid() check gpio range from 0 to 192.

gpio_direction_input()
	get_gpio_bank()
		omap_gpio_bank() (arch/arm/cpu/armv7/omap4/hwinit.c)
		arch/arm/include/asm/arch-omap4/gpio.h- - GPIO Base address define here
		get_gpio_index() - get gpio index 
		set_gpio_direction (bank, index,value) - OMAP_GPIO_OE register
		
		  
gpio_direction_output()
	get_gpio_bank()
		omap_gpio_bank() (arch/arm/cpu/armv7/omap4/hwinit.c)
		arch/arm/include/asm/arch-omap4/gpio.h- - GPIO Base address define here
		get_gpio_index() - get gpio index 
		set_gpio_direction (bank, index,value) - OMAP_GPIO_OE register
		
gpio_get_value()
	OMAP_GPIO_DATAIN  - get GPIO input value
	OMAP_GPIO_DATAOUT  - get GPIO output value





export gpio pin (echo 138 > export):

<4>[  613.995178] gpiolib: gpio_set_value
<4>[  613.995178] gpio-omap: gpio_set
<4>[  613.995361] gpio-omap: set_gpio_datout_reg
<4>[  804.790618] gpiolib: gpio_request
<4>[  804.790618] gpio-omap: omap_gpio_request
<4>[  804.794616] gpiolib: gpio_export


modified gpio_direction (echo out > direction):

<4>[  974.831665] gpiolib: gpio_direction_output
<4>[  974.835540] gpio-omap: gpio_output
<4>[  974.839691] gpio-omap: set_gpio_datout_reg
<4>[  974.844085] gpio-omap: set_gpio_direction

KERNEL:
------
Low Level Device Driver:
-----------------------
1. drivers/gpio/gpio-omap.c

init ()
{
platform_driver_register(&omap_gpio_driver);
}
static struct platform_driver omap_gpio_driver = {
        .probe          = omap_gpio_probe,
        .driver         = {
                .name   = "omap_gpio",
                .pm     = &gpio_pm_ops,
                .of_match_table = of_match_ptr(omap_gpio_match),
        },
};




Architecture  (platform) Dependent Code:
---------------------------------------
1. Board Specific file:   arch/arm/mach-omap2/board-omap4panda.c (board specific initalization - MUX,timers,clocks)

2. arch/arm/mach-omap2/gpio.c (gpio initalization, GPIO platform device registration happend with name "omap_gpio")
    omap2_gpio_dev_init ()
    {
       char *name = "omap_gpio";
    }


   arch/arm/plat-omap/include/plat/gpio.h
 
struct omap_gpio_platform_data {

	strutct omap_gpio_reg_offs *regs

}

arch/arm/mach-omap2/omap_hwmod.c (generic h/w module initalization)


arch/arm/mach-omap2/omap_hwmod_44xx_data.c (All platform data available here)


include/asm-generic/gpio.h 

	struct gpio_chip {

/home/kernelmasters/android_13.02_source/out/target/product/pandaboard/obj/kernel/arch/arm/boot

Base Address:
0x4A31 0000 
0x4805 5000 
0x4805 7000 
0x4805 9000 
0x4805 B000 
0x4805 D000 



