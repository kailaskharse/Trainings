
test:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x153>
  400248:	78 38                	js     400282 <_init-0x146>
  40024a:	36                   	ss
  40024b:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 18                	add    %bl,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 05 11 55 9d 38    	add    %al,0x389d5511(%rip)        # 38dd579a <_end+0x387d475a>
  400289:	46 d2 0f             	rex.RX rorb %cl,(%rdi)
  40028c:	51                   	push   %rcx
  40028d:	59                   	pop    %rcx
  40028e:	07                   	(bad)  
  40028f:	d3 a7 d0 9c a2 7d    	shll   %cl,0x7da29cd0(%rdi)
  400295:	6f                   	outsl  %ds:(%rsi),(%dx)
  400296:	e0 74                	loopne 40030c <_init-0xbc>

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	1a 00                	sbb    (%rax),%al
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	21 00                	and    %eax,(%rax)
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	01 00                	add    %eax,(%rax)
  400302:	00 00                	add    %al,(%rax)
  400304:	20 00                	and    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400318 <.dynstr>:
  400318:	00 5f 5f             	add    %bl,0x5f(%rdi)
  40031b:	67 6d                	insl   (%dx),%es:(%edi)
  40031d:	6f                   	outsl  %ds:(%rsi),(%dx)
  40031e:	6e                   	outsb  %ds:(%rsi),(%dx)
  40031f:	5f                   	pop    %rdi
  400320:	73 74                	jae    400396 <_init-0x32>
  400322:	61                   	(bad)  
  400323:	72 74                	jb     400399 <_init-0x2f>
  400325:	5f                   	pop    %rdi
  400326:	5f                   	pop    %rdi
  400327:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40032b:	63 2e                	movslq (%rsi),%ebp
  40032d:	73 6f                	jae    40039e <_init-0x2a>
  40032f:	2e 36 00 70 72       	cs add %dh,%cs:%ss:0x72(%rax)
  400334:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  40033b:	6c                   	insb   (%dx),%es:(%rdi)
  40033c:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400343:	72 74                	jb     4003b9 <_init-0xf>
  400345:	5f                   	pop    %rdi
  400346:	6d                   	insl   (%dx),%es:(%rdi)
  400347:	61                   	(bad)  
  400348:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  40034f:	43 5f                	rex.XB pop %r15
  400351:	32 2e                	xor    (%rsi),%ch
  400353:	32 2e                	xor    (%rsi),%ch
  400355:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400358 <.gnu.version>:
  400358:	00 00                	add    %al,(%rax)
  40035a:	02 00                	add    (%rax),%al
  40035c:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

0000000000400360 <.gnu.version_r>:
  400360:	01 00                	add    %eax,(%rax)
  400362:	01 00                	add    %eax,(%rax)
  400364:	10 00                	adc    %al,(%rax)
  400366:	00 00                	add    %al,(%rax)
  400368:	10 00                	adc    %al,(%rax)
  40036a:	00 00                	add    %al,(%rax)
  40036c:	00 00                	add    %al,(%rax)
  40036e:	00 00                	add    %al,(%rax)
  400370:	75 1a                	jne    40038c <_init-0x3c>
  400372:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400378:	33 00                	xor    (%rax),%eax
  40037a:	00 00                	add    %al,(%rax)
  40037c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400380 <.rela.dyn>:
  400380:	f8                   	clc    
  400381:	0f 60 00             	punpcklbw (%rax),%mm0
  400384:	00 00                	add    %al,(%rax)
  400386:	00 00                	add    %al,(%rax)
  400388:	06                   	(bad)  
  400389:	00 00                	add    %al,(%rax)
  40038b:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .rela.plt:

0000000000400398 <.rela.plt>:
  400398:	18 10                	sbb    %dl,(%rax)
  40039a:	60                   	(bad)  
  40039b:	00 00                	add    %al,(%rax)
  40039d:	00 00                	add    %al,(%rax)
  40039f:	00 07                	add    %al,(%rdi)
  4003a1:	00 00                	add    %al,(%rax)
  4003a3:	00 01                	add    %al,(%rcx)
	...
  4003ad:	00 00                	add    %al,(%rax)
  4003af:	00 20                	add    %ah,(%rax)
  4003b1:	10 60 00             	adc    %ah,0x0(%rax)
  4003b4:	00 00                	add    %al,(%rax)
  4003b6:	00 00                	add    %al,(%rax)
  4003b8:	07                   	(bad)  
  4003b9:	00 00                	add    %al,(%rax)
  4003bb:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .init:

00000000004003c8 <_init>:
  4003c8:	48 83 ec 08          	sub    $0x8,%rsp
  4003cc:	e8 6b 00 00 00       	callq  40043c <call_gmon_start>
  4003d1:	48 83 c4 08          	add    $0x8,%rsp
  4003d5:	c3                   	retq   

Disassembly of section .plt:

00000000004003e0 <printf@plt-0x10>:
  4003e0:	ff 35 22 0c 20 00    	pushq  0x200c22(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003e6:	ff 25 24 0c 20 00    	jmpq   *0x200c24(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003f0 <printf@plt>:
  4003f0:	ff 25 22 0c 20 00    	jmpq   *0x200c22(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003f6:	68 00 00 00 00       	pushq  $0x0
  4003fb:	e9 e0 ff ff ff       	jmpq   4003e0 <_init+0x18>

0000000000400400 <__libc_start_main@plt>:
  400400:	ff 25 1a 0c 20 00    	jmpq   *0x200c1a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400406:	68 01 00 00 00       	pushq  $0x1
  40040b:	e9 d0 ff ff ff       	jmpq   4003e0 <_init+0x18>

Disassembly of section .text:

0000000000400410 <_start>:
  400410:	31 ed                	xor    %ebp,%ebp
  400412:	49 89 d1             	mov    %rdx,%r9
  400415:	5e                   	pop    %rsi
  400416:	48 89 e2             	mov    %rsp,%rdx
  400419:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40041d:	50                   	push   %rax
  40041e:	54                   	push   %rsp
  40041f:	49 c7 c0 10 06 40 00 	mov    $0x400610,%r8
  400426:	48 c7 c1 80 05 40 00 	mov    $0x400580,%rcx
  40042d:	48 c7 c7 3d 05 40 00 	mov    $0x40053d,%rdi
  400434:	e8 c7 ff ff ff       	callq  400400 <__libc_start_main@plt>
  400439:	f4                   	hlt    
  40043a:	66 90                	xchg   %ax,%ax

000000000040043c <call_gmon_start>:
  40043c:	48 83 ec 08          	sub    $0x8,%rsp
  400440:	48 8b 05 b1 0b 20 00 	mov    0x200bb1(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  400447:	48 85 c0             	test   %rax,%rax
  40044a:	74 02                	je     40044e <call_gmon_start+0x12>
  40044c:	ff d0                	callq  *%rax
  40044e:	48 83 c4 08          	add    $0x8,%rsp
  400452:	c3                   	retq   
  400453:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40045a:	00 00 00 
  40045d:	0f 1f 00             	nopl   (%rax)

0000000000400460 <deregister_tm_clones>:
  400460:	b8 3f 10 60 00       	mov    $0x60103f,%eax
  400465:	55                   	push   %rbp
  400466:	48 2d 38 10 60 00    	sub    $0x601038,%rax
  40046c:	48 83 f8 0e          	cmp    $0xe,%rax
  400470:	48 89 e5             	mov    %rsp,%rbp
  400473:	77 02                	ja     400477 <deregister_tm_clones+0x17>
  400475:	5d                   	pop    %rbp
  400476:	c3                   	retq   
  400477:	b8 00 00 00 00       	mov    $0x0,%eax
  40047c:	48 85 c0             	test   %rax,%rax
  40047f:	74 f4                	je     400475 <deregister_tm_clones+0x15>
  400481:	5d                   	pop    %rbp
  400482:	bf 38 10 60 00       	mov    $0x601038,%edi
  400487:	ff e0                	jmpq   *%rax
  400489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400490 <register_tm_clones>:
  400490:	b8 38 10 60 00       	mov    $0x601038,%eax
  400495:	55                   	push   %rbp
  400496:	48 2d 38 10 60 00    	sub    $0x601038,%rax
  40049c:	48 c1 f8 03          	sar    $0x3,%rax
  4004a0:	48 89 e5             	mov    %rsp,%rbp
  4004a3:	48 89 c2             	mov    %rax,%rdx
  4004a6:	48 c1 ea 3f          	shr    $0x3f,%rdx
  4004aa:	48 01 d0             	add    %rdx,%rax
  4004ad:	48 89 c6             	mov    %rax,%rsi
  4004b0:	48 d1 fe             	sar    %rsi
  4004b3:	75 02                	jne    4004b7 <register_tm_clones+0x27>
  4004b5:	5d                   	pop    %rbp
  4004b6:	c3                   	retq   
  4004b7:	ba 00 00 00 00       	mov    $0x0,%edx
  4004bc:	48 85 d2             	test   %rdx,%rdx
  4004bf:	74 f4                	je     4004b5 <register_tm_clones+0x25>
  4004c1:	5d                   	pop    %rbp
  4004c2:	bf 38 10 60 00       	mov    $0x601038,%edi
  4004c7:	ff e2                	jmpq   *%rdx
  4004c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004004d0 <__do_global_dtors_aux>:
  4004d0:	80 3d 61 0b 20 00 00 	cmpb   $0x0,0x200b61(%rip)        # 601038 <__TMC_END__>
  4004d7:	75 11                	jne    4004ea <__do_global_dtors_aux+0x1a>
  4004d9:	55                   	push   %rbp
  4004da:	48 89 e5             	mov    %rsp,%rbp
  4004dd:	e8 7e ff ff ff       	callq  400460 <deregister_tm_clones>
  4004e2:	5d                   	pop    %rbp
  4004e3:	c6 05 4e 0b 20 00 01 	movb   $0x1,0x200b4e(%rip)        # 601038 <__TMC_END__>
  4004ea:	f3 c3                	repz retq 
  4004ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004f0 <frame_dummy>:
  4004f0:	48 83 3d 28 09 20 00 	cmpq   $0x0,0x200928(%rip)        # 600e20 <__JCR_END__>
  4004f7:	00 
  4004f8:	74 1b                	je     400515 <frame_dummy+0x25>
  4004fa:	b8 00 00 00 00       	mov    $0x0,%eax
  4004ff:	48 85 c0             	test   %rax,%rax
  400502:	74 11                	je     400515 <frame_dummy+0x25>
  400504:	55                   	push   %rbp
  400505:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  40050a:	48 89 e5             	mov    %rsp,%rbp
  40050d:	ff d0                	callq  *%rax
  40050f:	5d                   	pop    %rbp
  400510:	e9 7b ff ff ff       	jmpq   400490 <register_tm_clones>
  400515:	e9 76 ff ff ff       	jmpq   400490 <register_tm_clones>
  40051a:	66 90                	xchg   %ax,%ax

000000000040051c <my_fun>:
  40051c:	55                   	push   %rbp
  40051d:	48 89 e5             	mov    %rsp,%rbp
  400520:	48 83 ec 10          	sub    $0x10,%rsp
  400524:	89 7d fc             	mov    %edi,-0x4(%rbp)
  400527:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40052a:	89 c6                	mov    %eax,%esi
  40052c:	bf 24 06 40 00       	mov    $0x400624,%edi
  400531:	b8 00 00 00 00       	mov    $0x0,%eax
  400536:	e8 b5 fe ff ff       	callq  4003f0 <printf@plt>
  40053b:	c9                   	leaveq 
  40053c:	c3                   	retq   

000000000040053d <main>:
  40053d:	55                   	push   %rbp
  40053e:	48 89 e5             	mov    %rsp,%rbp
  400541:	48 83 ec 10          	sub    $0x10,%rsp
  400545:	48 c7 45 f8 1c 05 40 	movq   $0x40051c,-0x8(%rbp)
  40054c:	00 
  40054d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400551:	bf 03 00 00 00       	mov    $0x3,%edi
  400556:	ff d0                	callq  *%rax
  400558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40055c:	bf 04 00 00 00       	mov    $0x4,%edi
  400561:	ff d0                	callq  *%rax
  400563:	bf 02 00 00 00       	mov    $0x2,%edi
  400568:	e8 af ff ff ff       	callq  40051c <my_fun>
  40056d:	b8 00 00 00 00       	mov    $0x0,%eax
  400572:	c9                   	leaveq 
  400573:	c3                   	retq   
  400574:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40057b:	00 00 00 
  40057e:	66 90                	xchg   %ax,%ax

0000000000400580 <__libc_csu_init>:
  400580:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  400585:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  40058a:	48 8d 2d 87 08 20 00 	lea    0x200887(%rip),%rbp        # 600e18 <__init_array_end>
  400591:	4c 8d 25 78 08 20 00 	lea    0x200878(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400598:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  40059d:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  4005a2:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  4005a7:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  4005ac:	48 83 ec 38          	sub    $0x38,%rsp
  4005b0:	4c 29 e5             	sub    %r12,%rbp
  4005b3:	41 89 fd             	mov    %edi,%r13d
  4005b6:	49 89 f6             	mov    %rsi,%r14
  4005b9:	48 c1 fd 03          	sar    $0x3,%rbp
  4005bd:	49 89 d7             	mov    %rdx,%r15
  4005c0:	e8 03 fe ff ff       	callq  4003c8 <_init>
  4005c5:	48 85 ed             	test   %rbp,%rbp
  4005c8:	74 1c                	je     4005e6 <__libc_csu_init+0x66>
  4005ca:	31 db                	xor    %ebx,%ebx
  4005cc:	0f 1f 40 00          	nopl   0x0(%rax)
  4005d0:	4c 89 fa             	mov    %r15,%rdx
  4005d3:	4c 89 f6             	mov    %r14,%rsi
  4005d6:	44 89 ef             	mov    %r13d,%edi
  4005d9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4005dd:	48 83 c3 01          	add    $0x1,%rbx
  4005e1:	48 39 eb             	cmp    %rbp,%rbx
  4005e4:	75 ea                	jne    4005d0 <__libc_csu_init+0x50>
  4005e6:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4005eb:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  4005f0:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  4005f5:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  4005fa:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  4005ff:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400604:	48 83 c4 38          	add    $0x38,%rsp
  400608:	c3                   	retq   
  400609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400610 <__libc_csu_fini>:
  400610:	f3 c3                	repz retq 
  400612:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

0000000000400614 <_fini>:
  400614:	48 83 ec 08          	sub    $0x8,%rsp
  400618:	48 83 c4 08          	add    $0x8,%rsp
  40061c:	c3                   	retq   

Disassembly of section .rodata:

0000000000400620 <_IO_stdin_used>:
  400620:	01 00                	add    %eax,(%rax)
  400622:	02 00                	add    (%rax),%al
  400624:	78 20                	js     400646 <_IO_stdin_used+0x26>
  400626:	76 61                	jbe    400689 <_IO_stdin_used+0x69>
  400628:	6c                   	insb   (%dx),%es:(%rdi)
  400629:	75 65                	jne    400690 <_IO_stdin_used+0x70>
  40062b:	3a                   	.byte 0x3a
  40062c:	25                   	.byte 0x25
  40062d:	64 0a 00             	or     %fs:(%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000400630 <.eh_frame_hdr>:
  400630:	01 1b                	add    %ebx,(%rbx)
  400632:	03 3b                	add    (%rbx),%edi
  400634:	34 00                	xor    $0x0,%al
  400636:	00 00                	add    %al,(%rax)
  400638:	05 00 00 00 b0       	add    $0xb0000000,%eax
  40063d:	fd                   	std    
  40063e:	ff                   	(bad)  
  40063f:	ff 50 00             	callq  *0x0(%rax)
  400642:	00 00                	add    %al,(%rax)
  400644:	ec                   	in     (%dx),%al
  400645:	fe                   	(bad)  
  400646:	ff                   	(bad)  
  400647:	ff                   	(bad)  
  400648:	78 00                	js     40064a <_IO_stdin_used+0x2a>
  40064a:	00 00                	add    %al,(%rax)
  40064c:	0d ff ff ff 98       	or     $0x98ffffff,%eax
  400651:	00 00                	add    %al,(%rax)
  400653:	00 50 ff             	add    %dl,-0x1(%rax)
  400656:	ff                   	(bad)  
  400657:	ff                   	(bad)  
  400658:	b8 00 00 00 e0       	mov    $0xe0000000,%eax
  40065d:	ff                   	(bad)  
  40065e:	ff                   	(bad)  
  40065f:	ff e0                	jmpq   *%rax
  400661:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

0000000000400668 <__FRAME_END__-0xc0>:
  400668:	14 00                	adc    $0x0,%al
  40066a:	00 00                	add    %al,(%rax)
  40066c:	00 00                	add    %al,(%rax)
  40066e:	00 00                	add    %al,(%rax)
  400670:	01 7a 52             	add    %edi,0x52(%rdx)
  400673:	00 01                	add    %al,(%rcx)
  400675:	78 10                	js     400687 <_IO_stdin_used+0x67>
  400677:	01 1b                	add    %ebx,(%rbx)
  400679:	0c 07                	or     $0x7,%al
  40067b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400681:	00 00                	add    %al,(%rax)
  400683:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400686:	00 00                	add    %al,(%rax)
  400688:	58                   	pop    %rax
  400689:	fd                   	std    
  40068a:	ff                   	(bad)  
  40068b:	ff 30                	pushq  (%rax)
  40068d:	00 00                	add    %al,(%rax)
  40068f:	00 00                	add    %al,(%rax)
  400691:	0e                   	(bad)  
  400692:	10 46 0e             	adc    %al,0xe(%rsi)
  400695:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400698:	0b 77 08             	or     0x8(%rdi),%esi
  40069b:	80 00 3f             	addb   $0x3f,(%rax)
  40069e:	1a 3b                	sbb    (%rbx),%bh
  4006a0:	2a 33                	sub    (%rbx),%dh
  4006a2:	24 22                	and    $0x22,%al
  4006a4:	00 00                	add    %al,(%rax)
  4006a6:	00 00                	add    %al,(%rax)
  4006a8:	1c 00                	sbb    $0x0,%al
  4006aa:	00 00                	add    %al,(%rax)
  4006ac:	44 00 00             	add    %r8b,(%rax)
  4006af:	00 6c fe ff          	add    %ch,-0x1(%rsi,%rdi,8)
  4006b3:	ff 21                	jmpq   *(%rcx)
  4006b5:	00 00                	add    %al,(%rax)
  4006b7:	00 00                	add    %al,(%rax)
  4006b9:	41 0e                	rex.B (bad) 
  4006bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4006c1:	5c                   	pop    %rsp
  4006c2:	0c 07                	or     $0x7,%al
  4006c4:	08 00                	or     %al,(%rax)
  4006c6:	00 00                	add    %al,(%rax)
  4006c8:	1c 00                	sbb    $0x0,%al
  4006ca:	00 00                	add    %al,(%rax)
  4006cc:	64 00 00             	add    %al,%fs:(%rax)
  4006cf:	00 6d fe             	add    %ch,-0x2(%rbp)
  4006d2:	ff                   	(bad)  
  4006d3:	ff 37                	pushq  (%rdi)
  4006d5:	00 00                	add    %al,(%rax)
  4006d7:	00 00                	add    %al,(%rax)
  4006d9:	41 0e                	rex.B (bad) 
  4006db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4006e1:	72 0c                	jb     4006ef <_IO_stdin_used+0xcf>
  4006e3:	07                   	(bad)  
  4006e4:	08 00                	or     %al,(%rax)
  4006e6:	00 00                	add    %al,(%rax)
  4006e8:	24 00                	and    $0x0,%al
  4006ea:	00 00                	add    %al,(%rax)
  4006ec:	84 00                	test   %al,(%rax)
  4006ee:	00 00                	add    %al,(%rax)
  4006f0:	90                   	nop
  4006f1:	fe                   	(bad)  
  4006f2:	ff                   	(bad)  
  4006f3:	ff 89 00 00 00 00    	decl   0x0(%rcx)
  4006f9:	51                   	push   %rcx
  4006fa:	8c 05 86 06 5f 0e    	mov    %es,0xe5f0686(%rip)        # e9f0d86 <_end+0xe3efd46>
  400700:	40 83 07 8f          	rex addl $0xffffff8f,(%rdi)
  400704:	02 8e 03 8d 04 02    	add    0x2048d03(%rsi),%cl
  40070a:	58                   	pop    %rax
  40070b:	0e                   	(bad)  
  40070c:	08 00                	or     %al,(%rax)
  40070e:	00 00                	add    %al,(%rax)
  400710:	14 00                	adc    $0x0,%al
  400712:	00 00                	add    %al,(%rax)
  400714:	ac                   	lods   %ds:(%rsi),%al
  400715:	00 00                	add    %al,(%rax)
  400717:	00 f8                	add    %bh,%al
  400719:	fe                   	(bad)  
  40071a:	ff                   	(bad)  
  40071b:	ff 02                	incl   (%rdx)
	...

0000000000400728 <__FRAME_END__>:
  400728:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	f0 04 40             	lock add $0x40,%al
  600e13:	00 00                	add    %al,(%rax)
  600e15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	d0 04 40             	rolb   (%rax,%rax,2)
  600e1b:	00 00                	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	10 00                	adc    %al,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	c8 03 40 00          	enterq $0x4003,$0x0
  600e44:	00 00                	add    %al,(%rax)
  600e46:	00 00                	add    %al,(%rax)
  600e48:	0d 00 00 00 00       	or     $0x0,%eax
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 14 06             	add    %dl,(%rsi,%rax,1)
  600e52:	40 00 00             	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
  600e57:	00 19                	add    %bl,(%rcx)
  600e59:	00 00                	add    %al,(%rax)
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 10                	add    %dl,(%rax)
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 18                	add    %bl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 18                	add    %bl,(%rax)
  600eb1:	03 40 00             	add    0x0(%rax),%eax
  600eb4:	00 00                	add    %al,(%rax)
  600eb6:	00 00                	add    %al,(%rax)
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 0a                	add    %cl,(%rdx)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 3f                	add    %bh,(%rdi)
  600ed1:	00 00                	add    %al,(%rax)
  600ed3:	00 00                	add    %al,(%rax)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 0b                	add    %cl,(%rbx)
  600ed9:	00 00                	add    %al,(%rax)
  600edb:	00 00                	add    %al,(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 18                	add    %bl,(%rax)
  600ee1:	00 00                	add    %al,(%rax)
  600ee3:	00 00                	add    %al,(%rax)
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	30 00                	xor    %al,(%rax)
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	14 00                	adc    $0x0,%al
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
  600f29:	00 00                	add    %al,(%rax)
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 98 03 40 00 00    	add    %bl,0x4003(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 07                	add    %al,(%rdi)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 80 03 40 00 00    	add    %al,0x4003(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 08                	add    %cl,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 18                	add    %bl,(%rax)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 09                	add    %cl,(%rcx)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 18                	add    %bl,(%rax)
  600f61:	00 00                	add    %al,(%rax)
  600f63:	00 00                	add    %al,(%rax)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 fe                	add    %bh,%dh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 60 03             	add    %ah,0x3(%rax)
  600f72:	40 00 00             	add    %al,(%rax)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 ff                	add    %bh,%bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 01                	add    %al,(%rcx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 58 03             	add    %bl,0x3(%rax)
  600f92:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 f6                	add    %dh,%dh
  601019:	03 40 00             	add    0x0(%rax),%eax
  60101c:	00 00                	add    %al,(%rax)
  60101e:	00 00                	add    %al,(%rax)
  601020:	06                   	(bad)  
  601021:	04 40                	add    $0x40,%al
  601023:	00 00                	add    %al,(%rax)
  601025:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601028 <__data_start>:
	...

0000000000601030 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601038 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400350>
   a:	74 75                	je     81 <_init-0x400347>
   c:	2f                   	(bad)  
   d:	4c 69 6e 61 72 6f 20 	imul   $0x34206f72,0x61(%rsi),%r13
  14:	34 
  15:	2e                   	cs
  16:	37                   	(bad)  
  17:	2e 32 2d 32 75 62 75 	xor    %cs:0x75627532(%rip),%ch        # 75627550 <_end+0x75026510>
  1e:	6e                   	outsb  %ds:(%rsi),(%dx)
  1f:	74 75                	je     96 <_init-0x400332>
  21:	31 29                	xor    %ebp,(%rcx)
  23:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  26:	37                   	(bad)  
  27:	2e 32 00             	xor    %cs:(%rax),%al
  2a:	47                   	rex.RXB
  2b:	43                   	rex.XB
  2c:	43 3a 20             	rex.XB cmp (%r8),%spl
  2f:	28 55 62             	sub    %dl,0x62(%rbp)
  32:	75 6e                	jne    a2 <_init-0x400326>
  34:	74 75                	je     ab <_init-0x40031d>
  36:	2f                   	(bad)  
  37:	4c 69 6e 61 72 6f 20 	imul   $0x34206f72,0x61(%rsi),%r13
  3e:	34 
  3f:	2e 36 2e 33 2d 31 30 	cs ss xor %cs:%ss:0x62753031(%rip),%ebp        # 62753079 <_end+0x62152039>
  46:	75 62 
  48:	75 6e                	jne    b8 <_init-0x400310>
  4a:	74 75                	je     c1 <_init-0x400307>
  4c:	31 29                	xor    %ebp,(%rcx)
  4e:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  51:	36 2e 33 20          	ss xor %cs:%ss:(%rax),%esp
  55:	32 30                	xor    (%rax),%dh
  57:	31 32                	xor    %esi,(%rdx)
  59:	30 39                	xor    %bh,(%rcx)
  5b:	31 38                	xor    %edi,(%rax)
  5d:	20 28                	and    %ch,(%rax)
  5f:	70 72                	jo     d3 <_init-0x4002f5>
  61:	65                   	gs
  62:	72 65                	jb     c9 <_init-0x4002ff>
  64:	6c                   	insb   (%dx),%es:(%rdi)
  65:	65                   	gs
  66:	61                   	(bad)  
  67:	73 65                	jae    ce <_init-0x4002fa>
  69:	29 00                	sub    %eax,(%rax)
